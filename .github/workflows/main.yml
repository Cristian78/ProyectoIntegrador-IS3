name: CI

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest


    services:
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Checkout del codigo
        uses: actions/checkout@v4


      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar dependencias para tests
        run: |
          python -m pip install --upgrade pip
          pip install pytest redis flask

      - name: Ejecutar tests unitarios vote
        env:
          REDIS_HOST: localhost
        run: |
          cd vote
          pytest test_app.py

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Ejecutar tests unitarios result
        run: |
          cd result
          npm install
          npm test


      - name: Instalar dependencias CodeceptJS
        run: npm ci

      - name: Levantar la app con Docker Compose
        run: docker compose up -d
        env:
          REDIS_URL: redis

      - name: Esperar que Vote esté disponible
        run: |
          echo "Esperando a que Vote esté disponible en http://localhost:8080..."
          sleep 10
          curl --retry 10 --retry-delay 5 --retry-connrefused http://localhost:8080 || exit 1

      - name: Ejecutar tests E2E con CodeceptJS
        run: npx codeceptjs run --steps

      - name: Apagar contenedores
        run: docker compose down


      - name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Build servicio Vote
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/vote-app:latest ./vote
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/vote-app:latest

      - name: Build servicio Result
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/result-app:latest ./result
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/result-app:latest

      - name: Build servicio Worker
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/worker-app:latest ./worker
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/worker-app:latest


  deploy-to-railway:
    needs: build-and-push
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/railwayapp/cli:latest

    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Desplegar Vote 
        run: railway up --service vote-app --detach

      - name: Desplegar Result
        run: railway up --service result-app --detach

      - name: Desplegar Worker
        run: railway up --service worker-app --detach
